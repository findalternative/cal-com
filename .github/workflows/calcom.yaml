name: cal.com build

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-node@v4
        with:
          cache: 'yarn'
          cache-dependency-path: baserepo/yarn.lock
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: cal.com build
        run: |
          cd baserepo
          cp .env.example .env
          sed -i '/^NEXTAUTH_SECRET=$/c\\NEXTAUTH_SECRET='$(openssl rand -base64 32) .env
          sed -i '/^CALENDSO_ENCRYPTION_KEY=$/c\\CALENDSO_ENCRYPTION_KEY='$(openssl rand -base64 32) .env
          export YARN_ENABLE_IMMUTABLE_INSTALLS=false
          yarn
          yarn build
          git restore yarn.lock
